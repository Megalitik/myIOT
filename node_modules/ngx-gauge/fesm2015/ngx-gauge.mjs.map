{"version":3,"file":"ngx-gauge.mjs","sources":["../../../projects/ngx-gauge/src/common/util.ts","../../../projects/ngx-gauge/src/gauge/gauge-directives.ts","../../../projects/ngx-gauge/src/gauge/gauge.ts","../../../projects/ngx-gauge/src/gauge/gauge.html","../../../projects/ngx-gauge/src/ngx-gauge.module.ts","../../../projects/ngx-gauge/src/public_api.ts","../../../projects/ngx-gauge/src/ngx-gauge.ts"],"sourcesContent":["export function clamp(value: number, min: number, max: number): number {\n    return Math.max(min, Math.min(max, value));\n}\nexport function coerceBooleanProperty(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\nexport function coerceNumberProperty(value: any, fallbackValue: number = 0): number {\n    return isNaN(parseFloat(value)) || isNaN(Number(value)) ? fallbackValue : Number(value);\n}\nexport function cssUnit(value: number) {\n    return `${value}px`;\n}\nexport function isNumber(value: string) {\n    return value != undefined && !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}","import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"ngx-gauge-append\",\n  exportAs: \"ngxGaugeAppend\"\n})\nexport class NgxGaugeAppend {}\n\n@Directive({\n  selector: \"ngx-gauge-prepend\",\n  exportAs: \"ngxGaugePrepend\"\n})\nexport class NgxGaugePrepend {}\n\n@Directive({\n  selector: \"ngx-gauge-value\",\n  exportAs: \"ngxGaugeValue\"\n})\nexport class NgxGaugeValue {}\n\n@Directive({\n  selector: \"ngx-gauge-label\",\n  exportAs: \"ngxGaugeLabel\"\n})\nexport class NgxGaugeLabel {}\n","import {\n    Component,\n    Input,\n    SimpleChanges,\n    ViewEncapsulation,\n    Renderer2,\n    AfterViewInit,\n    ElementRef,\n    OnChanges,\n    OnDestroy,\n    ViewChild,\n    ContentChild,\n    OnInit\n} from '@angular/core';\nimport { NgxGaugeError } from './gauge-error';\nimport {\n    clamp,\n    coerceBooleanProperty,\n    coerceNumberProperty,\n    cssUnit,\n    isNumber\n} from '../common/util';\nimport { NgxGaugeLabel, NgxGaugeValue, NgxGaugePrepend, NgxGaugeAppend } from './gauge-directives';\n\nconst DEFAULTS = {\n    MIN: 0,\n    MAX: 100,\n    TYPE: 'arch',\n    THICK: 4,\n    FOREGROUND_COLOR: 'rgba(0, 150, 136, 1)',\n    BACKGROUND_COLOR: 'rgba(0, 0, 0, 0.1)',\n    CAP: 'butt',\n    SIZE: 200\n};\n\nexport type NgxGaugeType = 'full' | 'arch' | 'semi';\nexport type NgxGaugeCap = 'round' | 'butt';\n\n@Component({\n    selector: 'ngx-gauge',\n    templateUrl: 'gauge.html',\n    styleUrls: ['gauge.css'],\n    host: {\n        'role': 'slider',\n        'aria-readonly': 'true',\n        '[class.ngx-gauge-meter]': 'true',\n        '[attr.aria-valuemin]': 'min',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuenow]': 'value',\n        '[attr.aria-label]': 'ariaLabel',\n        '[attr.aria-labelledby]': 'ariaLabelledby'\n\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxGauge implements AfterViewInit, OnChanges, OnDestroy, OnInit {\n\n    @ViewChild('canvas', { static: true }) _canvas: ElementRef;\n    @ViewChild('rLabel', { static: true }) _label: ElementRef;\n    @ViewChild('reading', { static: true }) _reading: ElementRef;\n\n    @ContentChild(NgxGaugeLabel) _labelChild: NgxGaugeLabel;\n    @ContentChild(NgxGaugePrepend) _prependChild: NgxGaugePrepend;\n    @ContentChild(NgxGaugeAppend) _appendChild: NgxGaugeAppend;\n    @ContentChild(NgxGaugeValue) _valueDisplayChild: NgxGaugeValue;\n\n    private _size: number = DEFAULTS.SIZE;\n    private _min: number = DEFAULTS.MIN;\n    private _max: number = DEFAULTS.MAX;\n    private _animate: boolean = true;\n    private _margin: number = 0;\n\n    private _initialized: boolean = false;\n    private _context: CanvasRenderingContext2D;\n    private _animationRequestID: number = 0;\n\n    @Input('aria-label') ariaLabel: string = '';\n\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    @Input()\n    get size(): number { return this._size; }\n    set size(value: number) {\n        this._size = coerceNumberProperty(value);\n    }\n\n    @Input()\n    get margin(): number { return this._margin; }\n    set margin(value: number) {\n        this._margin = coerceNumberProperty(value);\n    }    \n\n    @Input()\n    get min(): number { return this._min; }\n    set min(value: number) {\n        this._min = coerceNumberProperty(value, DEFAULTS.MIN);\n    }\n    @Input()\n    get animate(): boolean { return this._animate; }\n    set animate(value) {\n        this._animate = coerceBooleanProperty(value);\n    }\n\n    @Input()\n    get max(): number { return this._max; }\n    set max(value: number) {\n        this._max = coerceNumberProperty(value, DEFAULTS.MAX);\n    }\n\n    @Input() type: NgxGaugeType = DEFAULTS.TYPE as NgxGaugeType;\n\n    @Input() cap: NgxGaugeCap = DEFAULTS.CAP as NgxGaugeCap;\n\n    @Input() thick: number = DEFAULTS.THICK;\n\n    @Input() label: string;\n\n    @Input() append: string;\n\n    @Input() prepend: string;\n\n    @Input() foregroundColor: string = DEFAULTS.FOREGROUND_COLOR;\n\n    @Input() backgroundColor: string = DEFAULTS.BACKGROUND_COLOR;\n\n    // { \"40\" : { color: \"green\", bgOpacity: .2 }, ... }\n    @Input() thresholds: Object = Object.create(null);\n\n    // { \"25\": { color: '#ccc', type: 'line', size: 8, label: \"25 lbs\" }, ... }\n    @Input() markers: Object = Object.create(null);\n    \n    private _value: number = 0;\n\n    @Input()\n    get value() { return this._value; }\n    set value(val: number) {\n        this._value = coerceNumberProperty(val);\n    }\n\n    @Input() duration: number = 1200;\n\n    constructor(private _elementRef: ElementRef, private _renderer: Renderer2) { }\n\n    ngOnInit() {\n        // if markers are to be added, but no margin specified then here we add 10 px.\n        if (this.markers && Object.keys(this.markers).length > 0 && !this._margin) this._margin = 10;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const isCanvasPropertyChanged = changes['thick'] || changes['type'] || changes['cap'] || changes['size'];\n        const isDataChanged = changes['value'] || changes['min'] || changes['max'];\n\n        if (this._initialized) {\n            if (isDataChanged) {\n                let nv, ov;\n                if (changes['value']) {\n                    nv = changes['value'].currentValue;\n                    ov = changes['value'].previousValue;\n                }\n                this._update(nv, ov);\n            }\n            if (isCanvasPropertyChanged) {\n                this._destroy();\n                this._init();\n            }\n        }\n    }\n\n    private _updateSize() {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'width', cssUnit(this._getWidth()));\n        this._renderer.setStyle(this._elementRef.nativeElement, 'height', cssUnit(this._getCanvasHeight()));\n        this._canvas.nativeElement.width = this._getWidth();\n        this._canvas.nativeElement.height = this._getCanvasHeight();\n        this._renderer.setStyle(this._label.nativeElement,\n            'transform', 'translateY(' + (this.size / 3 * 2 - this.size / 13 / 4) + 'px)');\n        this._renderer.setStyle(this._reading.nativeElement,\n            'transform', 'translateY(' + (this.size / 2 - this.size * 0.22 / 2) + 'px)');\n    }\n\n    ngAfterViewInit() {\n        if (this._canvas) {\n            this._init();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy();\n    }\n\n    private _getBounds(type: NgxGaugeType) {\n        let head, tail, start, end;\n        if (type == 'semi') {\n            head = Math.PI;\n            tail = 2 * Math.PI;\n            start = 180;\n            end = 360;\n        } else if (type == 'full') {\n            head = 1.5 * Math.PI;\n            tail = 3.5 * Math.PI;\n            start = 270;\n            end = start + 360;\n        } else if (type === 'arch') {\n            head = 0.8 * Math.PI;\n            tail = 2.2 * Math.PI;\n            start = 180 - (0.2 * 180);\n            end = 360 + (0.2 * 180);\n        }\n        return { head, tail, start, end };\n    }\n\n    private _drawShell(start: number, middle: number, tail: number, color: string) {\n        let center = this._getCenter(),\n            radius = this._getRadius();\n\n        if (this._initialized) {\n            this._clear();\n            this._drawMarkersAndTicks();\n\n            let ranges = this._getBackgroundColorRanges();\n\n            this._context.lineWidth = this.thick;\n            \n            if (ranges && ranges.length > 0) {\n                // if background color is not specified then use default background, unless opacity is provided in which case use the color\n                // and opactity against color, to form the background color.\n                this._context.lineCap = 'butt'\n                for(let i = 0; i < ranges.length; ++i) {\n                    let r = ranges[i];\n                    this._context.beginPath();\n                    this._context.strokeStyle = r.backgroundColor ? r.backgroundColor : (r.bgOpacity) ? r.color : this.backgroundColor;\n                    if (r.bgOpacity !== undefined && r.bgOpacity !== null) {\n                        this._context.globalAlpha = r.bgOpacity;\n                    }\n                    this._context.arc(center.x, center.y, radius, this._getDisplacement(r.start),this._getDisplacement(r.end), false);\n                    this._context.stroke();         \n                    this._context.globalAlpha = 1;                    \n                }\n            } else {\n                this._context.lineCap = this.cap;\n                this._context.beginPath();\n                this._context.strokeStyle = this.backgroundColor;\n                this._context.arc(center.x, center.y, radius, start, tail, false);\n                this._context.stroke();\n            }\n            this._drawFill(start, middle, tail, color);\n        }\n    }\n\n    private _drawFill(start: number, middle: number, tail: number, color: string) {\n        let center = this._getCenter(),\n            radius = this._getRadius();\n\n        this._context.lineCap = this.cap;\n        this._context.lineWidth = this.thick;            \n\n        middle = Math.max(middle, start); // never below 0%\n        middle = Math.min(middle, tail); // never exceed 100%\n\n        this._context.lineCap = this.cap;\n        this._context.lineWidth = this.thick;\n\n        this._context.beginPath();\n        this._context.strokeStyle = color;\n        this._context.arc(center.x, center.y, radius, start, middle, false);\n        this._context.stroke();\n\n    }\n\n    private _addMarker(angle,color,label?,type?,len?,font?) {\n\n        var rad = angle * Math.PI / 180; \n\n        let offset = 2;\n\n        if (!len) len = 8;\n\n        if (!type) type = 'line';\n\n        let center = this._getCenter(),\n            radius = this._getRadius();\n\n        let x =  (radius + this.thick/2 + offset) * Math.cos(rad) + center.x;\n        let y =  (radius + this.thick/2 + offset) * Math.sin(rad) + center.y;    \n        let x2 = (radius + this.thick/2 + offset + len) * Math.cos(rad) + center.x;\n        let y2= (radius + this.thick/2 + offset + len) * Math.sin(rad) + center.y;\n        \n        if (type == 'triangle') {\n\n            //Draw the triangle marker\n            this._context.beginPath();\n            this._context.strokeStyle = color;\n            this._context.moveTo(x,y);\n\n            this._context.lineWidth = 1;\n\n            let a2 = angle - 45;\n            let a3 = angle + 45;\n\n            if (a2 < 0) a2 += 360;\n            if (a2 > 360) a2 -= 360;\n\n            if (a3 < 0) a3 += 360;\n            if (a3 > 360) a3 -= 360;\n\n            let rad2 = a2 * Math.PI / 180;  \n            let x3 =  len * Math.cos(rad2) + x;\n            let y3 =  len * Math.sin(rad2) + y;\n            this._context.lineTo(x3,y3);\n\n            let rad3 = a3 * Math.PI / 180;  \n            let x4 =  len * Math.cos(rad3) + x;\n            let y4 =  len * Math.sin(rad3) + y;\n\n            this._context.lineTo(x4,y4);\n            this._context.lineTo(x,y);\n\n            this._context.closePath();\n            this._context.stroke();\n\n            this._context.fillStyle = color;\n            this._context.fill();\n\n        } else { //line\n  \n            this._context.beginPath();\n            this._context.lineWidth = .5;\n            this._context.strokeStyle = color;\n     \n            this._context.moveTo(x,y);\n            this._context.lineTo(x2,y2);\n    \n            this._context.closePath();\n            this._context.stroke();\n\n        }\n\n        if (label) {         \n            this._context.save();\n            this._context.translate(x2, y2);\n            this._context.rotate((angle + 90) * (Math.PI / 180));\n            this._context.textAlign = \"center\";\n            this._context.font = (font) ? font : '13px Arial';\n            this._context.fillText(label,0,-3);\n            this._context.restore();\n        }\n\n    }\n\n    private _clear() {\n        this._context.clearRect(0, 0, this._getWidth(), this._getHeight());\n    }\n\n    private _getWidth() {\n        return this.size;\n    }\n\n    private _getHeight() {\n        return this.size;\n    }\n\n    // canvas height will be shorter for type 'semi' and 'arch'\n    private _getCanvasHeight() {\n        return (this.type == 'arch' || this.type == 'semi')\n            ? 0.85 * this._getHeight()\n            : this._getHeight();\n    }\n\n    private _getRadius() {\n        const center = this._getCenter();\n        var rad = center.x - this.thick;\n        if (this._margin > 0) rad -= this._margin;\n        return rad;\n    }\n\n    private _getCenter() {\n        var x = this._getWidth() / 2,\n            y = this._getHeight() / 2;\n        return { x, y };\n    }\n\n    private _init() {\n        this._context = (this._canvas.nativeElement as HTMLCanvasElement).getContext('2d');\n        this._initialized = true;\n        this._updateSize();\n        this._create();\n    }\n\n    private _destroy() {\n        if (this._animationRequestID) {\n            window.cancelAnimationFrame(this._animationRequestID);\n            this._animationRequestID = 0;\n        }\n        this._clear();\n        this._context = null;\n        this._initialized = false;\n    }\n\n    private _getForegroundColorByRange(value) {\n\n        const thresh = this._getThresholdMatchForValue(value);\n        return thresh && thresh.color ? thresh.color : this.foregroundColor;\n    }\n\n    private _getThresholdMatchForValue(value) {\n        const match = Object.keys(this.thresholds)\n            .filter(function (item) { return isNumber(item) && Number(item) <= value })\n            .sort((a, b) => Number(a) - Number(b))\n            .reverse()[0];\n\n        if (match !== undefined) {\n            const thresh = this.thresholds[match];\n            const t = {\n                color:thresh.color,\n                backgroundColor:thresh.backgroundColor,\n                bgOpacity: thresh.bgOpacity,\n                start:Number(match),\n                end:this._getNextThreshold(Number(match))\n            };\n            return t;\n        }\n    }\n\n    private _getNextThreshold(value) :number {\n        const match = Object.keys(this.thresholds)\n            .filter(function (item) { return isNumber(item) && Number(item) > value })\n            .sort((a, b) => Number(a) - Number(b)) \n\n        if (match && match[0] !== undefined) {\n            return Number(match[0]);\n        }\n        else {\n            return this.max;\n        }           \n    }\n\n    private _getBackgroundColorRanges() {\n\n        let i = 0,ranges = [];\n        do {\n            let thresh = this._getThresholdMatchForValue(i);\n            if (thresh) {\n                ranges.push({\n                    start:thresh.start,\n                    end:thresh.end,\n                    color: thresh.color,\n                    backgroundColor: thresh.backgroundColor,\n                    bgOpacity: thresh.bgOpacity\n                });\n                i = thresh.end;\n                if (i >= this.max) break;\n            }\n            else break;\n        } while(true);\n\n        return ranges;\n    }\n\n    private _getDisplacement(v:number) {\n        let  type = this.type,\n            bounds = this._getBounds(type),\n            min = this.min,\n            max = this.max,\n            start = bounds.head,\n            value = clamp(v, this.min, this.max),\n            unit = (bounds.tail - bounds.head) / (max - min),\n            displacement = unit * (value - min);\n        \n        return start + displacement;\n            \n    }\n\n    private _create(nv?: number, ov?: number) {\n        let self = this,\n            type = this.type,\n            bounds = this._getBounds(type),\n            duration = this.duration,\n            min = this.min,\n            max = this.max,\n            value = clamp(this.value, this.min, this.max),\n            start = bounds.head,\n            unit = (bounds.tail - bounds.head) / (max - min),\n            displacement = unit * (value - min),\n            tail = bounds.tail,\n            color = this._getForegroundColorByRange(value),\n            startTime;\n\n        if (self._animationRequestID) {\n            window.cancelAnimationFrame(self._animationRequestID);\n        }\n\n        function animate(timestamp) {\n            timestamp = timestamp || new Date().getTime();\n            let runtime = timestamp - startTime;\n            let progress = Math.min(runtime / duration, 1);\n            let previousProgress = ov ? (ov - min) * unit : 0;\n            let middle = start + previousProgress + displacement * progress;\n            self._drawShell(start, middle, tail, color);\n            if (self._animationRequestID && (runtime < duration)) {\n                self._animationRequestID = window.requestAnimationFrame((timestamp) => animate(timestamp));\n            } else {\n                window.cancelAnimationFrame(self._animationRequestID);\n            }\n        }\n        if (this._animate) {\n            if (nv != undefined && ov != undefined) {\n                displacement = unit * nv - unit * ov;\n            }\n            self._animationRequestID = window.requestAnimationFrame((timestamp) => {\n                startTime = timestamp || new Date().getTime();\n                animate(startTime);\n            });\n        } else {\n            self._drawShell(start, start + displacement, tail, color);\n        }\n    }\n\n    private _drawMarkersAndTicks() {\n    \n        /*\n         * example:\n        this.markers = {\n            '10': {\n                color: '#555',\n                size: 5,\n                label: '10',\n                font: '11px verdana'\n                type: 'line',\n            },\n            '20': {\n                color: '#555',\n                size: 5,\n                label: '20',\n                type: 'line',\n            },\n        };\n        */\n\n        if (this.markers) for(let mv in this.markers) {\n            var n = Number(mv);\n            var bounds = this._getBounds(this.type);\n            var degrees = (bounds.end - bounds.start);\n            var perD =  degrees / this.max;\n            var angle = bounds.start + (n * perD);\n\n            var m = this.markers[mv];\n            this._addMarker(angle,m.color,m.label,m.type,m.size,m.font);\n        }\n    }\n\n    private _update(nv: number, ov: number) {\n        this._clear();\n        this._create(nv, ov);\n    }\n\n}\n","<div class=\"reading-block\" #reading [style.fontSize]=\"(size-(margin*2)) * 0.22 + 'px'\">\n  <!-- This block can not be indented correctly, because line breaks cause layout spacing, related problem: https://pt.stackoverflow.com/q/276760/2998 -->\n  <u class=\"reading-affix\" [ngSwitch]=\"_prependChild != null\"><ng-content select=\"ngx-gauge-prepend\" *ngSwitchCase=\"true\"></ng-content><ng-container *ngSwitchCase=\"false\">{{prepend}}</ng-container></u><ng-container [ngSwitch]=\"_valueDisplayChild != null\"><ng-content *ngSwitchCase=\"true\" select=\"ngx-gauge-value\"></ng-content><ng-container *ngSwitchCase=\"false\">{{value | number}}</ng-container></ng-container><u class=\"reading-affix\" [ngSwitch]=\"_appendChild != null\"><ng-content select=\"ngx-gauge-append\" *ngSwitchCase=\"true\"></ng-content><ng-container *ngSwitchCase=\"false\">{{append}}</ng-container></u>\n</div>\n<div class=\"reading-label\" #rLabel\n     [style.fontSize]=\"(size-(margin*2)) / 13 + 'px'\"\n     [ngSwitch]=\"_labelChild != null\">\n  <ng-content select=\"ngx-gauge-label\" *ngSwitchCase=\"true\"></ng-content>\n  <ng-container *ngSwitchCase=\"false\">{{label}}</ng-container>\n</div>\n<canvas #canvas></canvas>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxGauge } from './gauge/gauge';\nimport { NgxGaugeLabel, NgxGaugeValue, NgxGaugePrepend, NgxGaugeAppend } from './gauge/gauge-directives';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel],\n  exports: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel]\n})\nexport class NgxGaugeModule { }","/*\n * Public APIs of ngx-gauge\n */\n\nexport * from './ngx-gauge.module';\nexport { NgxGauge } from './gauge/gauge';\nexport { NgxGaugeAppend, NgxGaugeLabel, NgxGaugePrepend, NgxGaugeValue } from './gauge/gauge-directives';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;SAAgB,KAAK,CAAC,KAAa,EAAE,GAAW,EAAE,GAAW,EAAA;AACzD,IAAA,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/C,CAAC;AACK,SAAU,qBAAqB,CAAC,KAAU,EAAA;IAC5C,OAAO,KAAK,IAAI,IAAI,IAAI,GAAG,KAAK,CAAA,CAAE,KAAK,OAAO,CAAC;AACnD,CAAC;SACe,oBAAoB,CAAC,KAAU,EAAE,gBAAwB,CAAC,EAAA;IACtE,OAAO,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AAC5F,CAAC;AACK,SAAU,OAAO,CAAC,KAAa,EAAA;IACjC,OAAO,CAAA,EAAG,KAAK,CAAA,EAAA,CAAI,CAAC;AACxB,CAAC;AACK,SAAU,QAAQ,CAAC,KAAa,EAAA;IAClC,OAAO,KAAK,IAAI,SAAS,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AACpF;;MCRa,cAAc,CAAA;;2GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;+FAAd,cAAc,EAAA,QAAA,EAAA,kBAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAd,cAAc,EAAA,UAAA,EAAA,CAAA;kBAJ1B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,kBAAkB;AAC5B,oBAAA,QAAQ,EAAE,gBAAgB;iBAC3B,CAAA;;MAOY,eAAe,CAAA;;4GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;gGAAf,eAAe,EAAA,QAAA,EAAA,mBAAA,EAAA,QAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAf,eAAe,EAAA,UAAA,EAAA,CAAA;kBAJ3B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,mBAAmB;AAC7B,oBAAA,QAAQ,EAAE,iBAAiB;iBAC5B,CAAA;;MAOY,aAAa,CAAA;;0GAAb,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;8FAAb,aAAa,EAAA,QAAA,EAAA,iBAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAb,aAAa,EAAA,UAAA,EAAA,CAAA;kBAJzB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,iBAAiB;AAC3B,oBAAA,QAAQ,EAAE,eAAe;iBAC1B,CAAA;;MAOY,aAAa,CAAA;;0GAAb,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;8FAAb,aAAa,EAAA,QAAA,EAAA,iBAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAb,aAAa,EAAA,UAAA,EAAA,CAAA;kBAJzB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,iBAAiB;AAC3B,oBAAA,QAAQ,EAAE,eAAe;iBAC1B,CAAA;;;ACCD,MAAM,QAAQ,GAAG;AACb,IAAA,GAAG,EAAE,CAAC;AACN,IAAA,GAAG,EAAE,GAAG;AACR,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,KAAK,EAAE,CAAC;AACR,IAAA,gBAAgB,EAAE,sBAAsB;AACxC,IAAA,gBAAgB,EAAE,oBAAoB;AACtC,IAAA,GAAG,EAAE,MAAM;AACX,IAAA,IAAI,EAAE,GAAG;CACZ,CAAC;MAsBW,QAAQ,CAAA;IAsFjB,WAAoB,CAAA,WAAuB,EAAU,SAAoB,EAAA;AAArD,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAY;AAAU,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAAW;AA3EjE,QAAA,IAAA,CAAA,KAAK,GAAW,QAAQ,CAAC,IAAI,CAAC;AAC9B,QAAA,IAAA,CAAA,IAAI,GAAW,QAAQ,CAAC,GAAG,CAAC;AAC5B,QAAA,IAAA,CAAA,IAAI,GAAW,QAAQ,CAAC,GAAG,CAAC;AAC5B,QAAA,IAAQ,CAAA,QAAA,GAAY,IAAI,CAAC;AACzB,QAAA,IAAO,CAAA,OAAA,GAAW,CAAC,CAAC;AAEpB,QAAA,IAAY,CAAA,YAAA,GAAY,KAAK,CAAC;AAE9B,QAAA,IAAmB,CAAA,mBAAA,GAAW,CAAC,CAAC;AAEnB,QAAA,IAAS,CAAA,SAAA,GAAW,EAAE,CAAC;AAElB,QAAA,IAAc,CAAA,cAAA,GAAkB,IAAI,CAAC;AA+BtD,QAAA,IAAA,CAAA,IAAI,GAAiB,QAAQ,CAAC,IAAoB,CAAC;AAEnD,QAAA,IAAA,CAAA,GAAG,GAAgB,QAAQ,CAAC,GAAkB,CAAC;AAE/C,QAAA,IAAA,CAAA,KAAK,GAAW,QAAQ,CAAC,KAAK,CAAC;AAQ/B,QAAA,IAAA,CAAA,eAAe,GAAW,QAAQ,CAAC,gBAAgB,CAAC;AAEpD,QAAA,IAAA,CAAA,eAAe,GAAW,QAAQ,CAAC,gBAAgB,CAAC;;QAGpD,IAAA,CAAA,UAAU,GAAW,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;QAGzC,IAAA,CAAA,OAAO,GAAW,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAEvC,QAAA,IAAM,CAAA,MAAA,GAAW,CAAC,CAAC;AAQlB,QAAA,IAAQ,CAAA,QAAA,GAAW,IAAI,CAAC;KAE6C;IA7D9E,IACI,IAAI,KAAa,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;IACzC,IAAI,IAAI,CAAC,KAAa,EAAA;AAClB,QAAA,IAAI,CAAC,KAAK,GAAG,oBAAoB,CAAC,KAAK,CAAC,CAAC;KAC5C;IAED,IACI,MAAM,KAAa,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;IAC7C,IAAI,MAAM,CAAC,KAAa,EAAA;AACpB,QAAA,IAAI,CAAC,OAAO,GAAG,oBAAoB,CAAC,KAAK,CAAC,CAAC;KAC9C;IAED,IACI,GAAG,KAAa,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE;IACvC,IAAI,GAAG,CAAC,KAAa,EAAA;QACjB,IAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC;KACzD;IACD,IACI,OAAO,KAAc,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE;IAChD,IAAI,OAAO,CAAC,KAAK,EAAA;AACb,QAAA,IAAI,CAAC,QAAQ,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;KAChD;IAED,IACI,GAAG,KAAa,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE;IACvC,IAAI,GAAG,CAAC,KAAa,EAAA;QACjB,IAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC;KACzD;IA0BD,IACI,KAAK,KAAK,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE;IACnC,IAAI,KAAK,CAAC,GAAW,EAAA;AACjB,QAAA,IAAI,CAAC,MAAM,GAAG,oBAAoB,CAAC,GAAG,CAAC,CAAC;KAC3C;IAMD,QAAQ,GAAA;;QAEJ,IAAI,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO;AAAE,YAAA,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;KAChG;AAED,IAAA,WAAW,CAAC,OAAsB,EAAA;QAC9B,MAAM,uBAAuB,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC;AACzG,QAAA,MAAM,aAAa,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC;QAE3E,IAAI,IAAI,CAAC,YAAY,EAAE;AACnB,YAAA,IAAI,aAAa,EAAE;gBACf,IAAI,EAAE,EAAE,EAAE,CAAC;AACX,gBAAA,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;AAClB,oBAAA,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC;AACnC,oBAAA,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC;AACvC,iBAAA;AACD,gBAAA,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACxB,aAAA;AACD,YAAA,IAAI,uBAAuB,EAAE;gBACzB,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,IAAI,CAAC,KAAK,EAAE,CAAC;AAChB,aAAA;AACJ,SAAA;KACJ;IAEO,WAAW,GAAA;QACf,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QAC5F,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,QAAQ,EAAE,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;QACpG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QACpD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC5D,QAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAC7C,WAAW,EAAE,aAAa,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;AACnF,QAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAC/C,WAAW,EAAE,aAAa,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;KACpF;IAED,eAAe,GAAA;QACX,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,KAAK,EAAE,CAAC;AAChB,SAAA;KACJ;IAED,WAAW,GAAA;QACP,IAAI,CAAC,QAAQ,EAAE,CAAC;KACnB;AAEO,IAAA,UAAU,CAAC,IAAkB,EAAA;AACjC,QAAA,IAAI,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC;QAC3B,IAAI,IAAI,IAAI,MAAM,EAAE;AAChB,YAAA,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC;AACf,YAAA,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;YACnB,KAAK,GAAG,GAAG,CAAC;YACZ,GAAG,GAAG,GAAG,CAAC;AACb,SAAA;aAAM,IAAI,IAAI,IAAI,MAAM,EAAE;AACvB,YAAA,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;AACrB,YAAA,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;YACrB,KAAK,GAAG,GAAG,CAAC;AACZ,YAAA,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC;AACrB,SAAA;aAAM,IAAI,IAAI,KAAK,MAAM,EAAE;AACxB,YAAA,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;AACrB,YAAA,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;YACrB,KAAK,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;YAC1B,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;AAC3B,SAAA;QACD,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC;KACrC;AAEO,IAAA,UAAU,CAAC,KAAa,EAAE,MAAc,EAAE,IAAY,EAAE,KAAa,EAAA;AACzE,QAAA,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,EAC1B,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAE/B,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAE5B,YAAA,IAAI,MAAM,GAAG,IAAI,CAAC,yBAAyB,EAAE,CAAC;YAE9C,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;AAErC,YAAA,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;;;AAG7B,gBAAA,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,MAAM,CAAA;AAC9B,gBAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACnC,oBAAA,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAClB,oBAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;AAC1B,oBAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,CAAC,CAAC,eAAe,GAAG,CAAC,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC;oBACnH,IAAI,CAAC,CAAC,SAAS,KAAK,SAAS,IAAI,CAAC,CAAC,SAAS,KAAK,IAAI,EAAE;wBACnD,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,CAAC,CAAC,SAAS,CAAC;AAC3C,qBAAA;AACD,oBAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,CAAC,EAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;AAClH,oBAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;AACvB,oBAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,CAAC,CAAC;AACjC,iBAAA;AACJ,aAAA;AAAM,iBAAA;gBACH,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;AACjC,gBAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;gBAC1B,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC;gBACjD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AAClE,gBAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;AAC1B,aAAA;YACD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AAC9C,SAAA;KACJ;AAEO,IAAA,SAAS,CAAC,KAAa,EAAE,MAAc,EAAE,IAAY,EAAE,KAAa,EAAA;AACxE,QAAA,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,EAC1B,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAE/B,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;QACjC,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;QAErC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QACjC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAEhC,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;QACjC,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;AAErC,QAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;AAC1B,QAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AACpE,QAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;KAE1B;IAEO,UAAU,CAAC,KAAK,EAAC,KAAK,EAAC,KAAM,EAAC,IAAK,EAAC,GAAI,EAAC,IAAK,EAAA;QAElD,IAAI,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;QAEhC,IAAI,MAAM,GAAG,CAAC,CAAC;AAEf,QAAA,IAAI,CAAC,GAAG;YAAE,GAAG,GAAG,CAAC,CAAC;AAElB,QAAA,IAAI,CAAC,IAAI;YAAE,IAAI,GAAG,MAAM,CAAC;AAEzB,QAAA,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,EAC1B,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAE/B,IAAI,CAAC,GAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,GAAC,CAAC,GAAG,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,GAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,GAAC,CAAC,GAAG,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QACrE,IAAI,EAAE,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,GAAC,CAAC,GAAG,MAAM,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAC3E,IAAI,EAAE,GAAE,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,GAAC,CAAC,GAAG,MAAM,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAE1E,IAAI,IAAI,IAAI,UAAU,EAAE;;AAGpB,YAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;AAC1B,YAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC;YAClC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;AAE1B,YAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC,CAAC;AAE5B,YAAA,IAAI,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC;AACpB,YAAA,IAAI,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC;YAEpB,IAAI,EAAE,GAAG,CAAC;gBAAE,EAAE,IAAI,GAAG,CAAC;YACtB,IAAI,EAAE,GAAG,GAAG;gBAAE,EAAE,IAAI,GAAG,CAAC;YAExB,IAAI,EAAE,GAAG,CAAC;gBAAE,EAAE,IAAI,GAAG,CAAC;YACtB,IAAI,EAAE,GAAG,GAAG;gBAAE,EAAE,IAAI,GAAG,CAAC;YAExB,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;AAC9B,YAAA,IAAI,EAAE,GAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACnC,YAAA,IAAI,EAAE,GAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACnC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC;YAE5B,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;AAC9B,YAAA,IAAI,EAAE,GAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACnC,YAAA,IAAI,EAAE,GAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAEnC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC;YAC5B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;AAE1B,YAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;AAC1B,YAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;AAEvB,YAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;AAChC,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AAExB,SAAA;AAAM,aAAA;AAEH,YAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;AAC1B,YAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,EAAE,CAAC;AAC7B,YAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC;YAElC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC;AAE5B,YAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;AAC1B,YAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;AAE1B,SAAA;AAED,QAAA,IAAI,KAAK,EAAE;AACP,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,GAAG,EAAE,KAAK,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;AACrD,YAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,QAAQ,CAAC;AACnC,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,GAAG,YAAY,CAAC;AAClD,YAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;AACnC,YAAA,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;AAC3B,SAAA;KAEJ;IAEO,MAAM,GAAA;AACV,QAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;KACtE;IAEO,SAAS,GAAA;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;KACpB;IAEO,UAAU,GAAA;QACd,OAAO,IAAI,CAAC,IAAI,CAAC;KACpB;;IAGO,gBAAgB,GAAA;AACpB,QAAA,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,MAAM,IAAI,IAAI,CAAC,IAAI,IAAI,MAAM;AAC9C,cAAE,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE;AAC1B,cAAE,IAAI,CAAC,UAAU,EAAE,CAAC;KAC3B;IAEO,UAAU,GAAA;AACd,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QACjC,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;AAChC,QAAA,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC;AAAE,YAAA,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC;AAC1C,QAAA,OAAO,GAAG,CAAC;KACd;IAEO,UAAU,GAAA;AACd,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,EACxB,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;AAC9B,QAAA,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;KACnB;IAEO,KAAK,GAAA;AACT,QAAA,IAAI,CAAC,QAAQ,GAAI,IAAI,CAAC,OAAO,CAAC,aAAmC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACnF,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,EAAE,CAAC;KAClB;IAEO,QAAQ,GAAA;QACZ,IAAI,IAAI,CAAC,mBAAmB,EAAE;AAC1B,YAAA,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;AACtD,YAAA,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;AAChC,SAAA;QACD,IAAI,CAAC,MAAM,EAAE,CAAC;AACd,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,QAAA,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;KAC7B;AAEO,IAAA,0BAA0B,CAAC,KAAK,EAAA;QAEpC,MAAM,MAAM,GAAG,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;AACtD,QAAA,OAAO,MAAM,IAAI,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC;KACvE;AAEO,IAAA,0BAA0B,CAAC,KAAK,EAAA;QACpC,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;AACrC,aAAA,MAAM,CAAC,UAAU,IAAI,IAAI,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAA,EAAE,CAAC;AAC1E,aAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACrC,aAAA,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;QAElB,IAAI,KAAK,KAAK,SAAS,EAAE;YACrB,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AACtC,YAAA,MAAM,CAAC,GAAG;gBACN,KAAK,EAAC,MAAM,CAAC,KAAK;gBAClB,eAAe,EAAC,MAAM,CAAC,eAAe;gBACtC,SAAS,EAAE,MAAM,CAAC,SAAS;AAC3B,gBAAA,KAAK,EAAC,MAAM,CAAC,KAAK,CAAC;gBACnB,GAAG,EAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aAC5C,CAAC;AACF,YAAA,OAAO,CAAC,CAAC;AACZ,SAAA;KACJ;AAEO,IAAA,iBAAiB,CAAC,KAAK,EAAA;QAC3B,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;AACrC,aAAA,MAAM,CAAC,UAAU,IAAI,IAAI,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAA,EAAE,CAAC;AACzE,aAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;QAE1C,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;AACjC,YAAA,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,SAAA;AACI,aAAA;YACD,OAAO,IAAI,CAAC,GAAG,CAAC;AACnB,SAAA;KACJ;IAEO,yBAAyB,GAAA;AAE7B,QAAA,IAAI,CAAC,GAAG,CAAC,EAAC,MAAM,GAAG,EAAE,CAAC;QACtB,GAAG;YACC,IAAI,MAAM,GAAG,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC;AAChD,YAAA,IAAI,MAAM,EAAE;gBACR,MAAM,CAAC,IAAI,CAAC;oBACR,KAAK,EAAC,MAAM,CAAC,KAAK;oBAClB,GAAG,EAAC,MAAM,CAAC,GAAG;oBACd,KAAK,EAAE,MAAM,CAAC,KAAK;oBACnB,eAAe,EAAE,MAAM,CAAC,eAAe;oBACvC,SAAS,EAAE,MAAM,CAAC,SAAS;AAC9B,iBAAA,CAAC,CAAC;AACH,gBAAA,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC;AACf,gBAAA,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG;oBAAE,MAAM;AAC5B,aAAA;;gBACI,MAAM;AACd,SAAA,QAAO,IAAI,EAAE;AAEd,QAAA,OAAO,MAAM,CAAC;KACjB;AAEO,IAAA,gBAAgB,CAAC,CAAQ,EAAA;AAC7B,QAAA,IAAK,IAAI,GAAG,IAAI,CAAC,IAAI,EACjB,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAC9B,GAAG,GAAG,IAAI,CAAC,GAAG,EACd,GAAG,GAAG,IAAI,CAAC,GAAG,EACd,KAAK,GAAG,MAAM,CAAC,IAAI,EACnB,KAAK,GAAG,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EACpC,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,KAAK,GAAG,GAAG,GAAG,CAAC,EAChD,YAAY,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC;QAExC,OAAO,KAAK,GAAG,YAAY,CAAC;KAE/B;IAEO,OAAO,CAAC,EAAW,EAAE,EAAW,EAAA;QACpC,IAAI,IAAI,GAAG,IAAI,EACX,IAAI,GAAG,IAAI,CAAC,IAAI,EAChB,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAC9B,QAAQ,GAAG,IAAI,CAAC,QAAQ,EACxB,GAAG,GAAG,IAAI,CAAC,GAAG,EACd,GAAG,GAAG,IAAI,CAAC,GAAG,EACd,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAC7C,KAAK,GAAG,MAAM,CAAC,IAAI,EACnB,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,KAAK,GAAG,GAAG,GAAG,CAAC,EAChD,YAAY,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,CAAC,EACnC,IAAI,GAAG,MAAM,CAAC,IAAI,EAClB,KAAK,GAAG,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,EAC9C,SAAS,CAAC;QAEd,IAAI,IAAI,CAAC,mBAAmB,EAAE;AAC1B,YAAA,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;AACzD,SAAA;QAED,SAAS,OAAO,CAAC,SAAS,EAAA;YACtB,SAAS,GAAG,SAAS,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;AAC9C,YAAA,IAAI,OAAO,GAAG,SAAS,GAAG,SAAS,CAAC;AACpC,YAAA,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,QAAQ,EAAE,CAAC,CAAC,CAAC;AAC/C,YAAA,IAAI,gBAAgB,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,IAAI,GAAG,CAAC,CAAC;YAClD,IAAI,MAAM,GAAG,KAAK,GAAG,gBAAgB,GAAG,YAAY,GAAG,QAAQ,CAAC;YAChE,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC5C,IAAI,IAAI,CAAC,mBAAmB,KAAK,OAAO,GAAG,QAAQ,CAAC,EAAE;AAClD,gBAAA,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC,SAAS,KAAK,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;AAC9F,aAAA;AAAM,iBAAA;AACH,gBAAA,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;AACzD,aAAA;SACJ;QACD,IAAI,IAAI,CAAC,QAAQ,EAAE;AACf,YAAA,IAAI,EAAE,IAAI,SAAS,IAAI,EAAE,IAAI,SAAS,EAAE;gBACpC,YAAY,GAAG,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,CAAC;AACxC,aAAA;YACD,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC,SAAS,KAAI;gBAClE,SAAS,GAAG,SAAS,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;gBAC9C,OAAO,CAAC,SAAS,CAAC,CAAC;AACvB,aAAC,CAAC,CAAC;AACN,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,GAAG,YAAY,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AAC7D,SAAA;KACJ;IAEO,oBAAoB,GAAA;AAExB;;;;;;;;;;;;;;;;;AAiBE;QAEF,IAAI,IAAI,CAAC,OAAO;AAAE,YAAA,KAAI,IAAI,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE;AAC1C,gBAAA,IAAI,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;gBACnB,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACxC,IAAI,OAAO,IAAI,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AAC1C,gBAAA,IAAI,IAAI,GAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;gBAC/B,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;gBAEtC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;gBACzB,IAAI,CAAC,UAAU,CAAC,KAAK,EAAC,CAAC,CAAC,KAAK,EAAC,CAAC,CAAC,KAAK,EAAC,CAAC,CAAC,IAAI,EAAC,CAAC,CAAC,IAAI,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAC/D,aAAA;KACJ;IAEO,OAAO,CAAC,EAAU,EAAE,EAAU,EAAA;QAClC,IAAI,CAAC,MAAM,EAAE,CAAC;AACd,QAAA,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;KACxB;;qGAjfQ,QAAQ,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;yFAAR,QAAQ,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,CAAA,YAAA,EAAA,WAAA,CAAA,EAAA,cAAA,EAAA,CAAA,iBAAA,EAAA,gBAAA,CAAA,EAAA,IAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,GAAA,EAAA,KAAA,EAAA,OAAA,EAAA,SAAA,EAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,OAAA,EAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,OAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,EAAA,UAAA,EAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,oBAAA,EAAA,KAAA,EAAA,oBAAA,EAAA,KAAA,EAAA,oBAAA,EAAA,OAAA,EAAA,iBAAA,EAAA,WAAA,EAAA,sBAAA,EAAA,gBAAA,EAAA,EAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,aAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAMH,aAAa,EACb,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,eAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,eAAe,+EACf,cAAc,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EACd,aAAa,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,SAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,QAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,QAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,QAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,UAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,SAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EChE/B,4rCAWA,EAAA,MAAA,EAAA,CAAA,yjBAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,WAAA,EAAA,IAAA,EAAA,QAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FD4Ca,QAAQ,EAAA,UAAA,EAAA,CAAA;kBAjBpB,SAAS;YACI,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,WAAW,EAGf,IAAA,EAAA;AACF,wBAAA,MAAM,EAAE,QAAQ;AAChB,wBAAA,eAAe,EAAE,MAAM;AACvB,wBAAA,yBAAyB,EAAE,MAAM;AACjC,wBAAA,sBAAsB,EAAE,KAAK;AAC7B,wBAAA,sBAAsB,EAAE,KAAK;AAC7B,wBAAA,sBAAsB,EAAE,OAAO;AAC/B,wBAAA,mBAAmB,EAAE,WAAW;AAChC,wBAAA,wBAAwB,EAAE,gBAAgB;AAE7C,qBAAA,EACc,aAAA,EAAA,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,4rCAAA,EAAA,MAAA,EAAA,CAAA,yjBAAA,CAAA,EAAA,CAAA;yHAIE,OAAO,EAAA,CAAA;sBAA7C,SAAS;gBAAC,IAAA,EAAA,CAAA,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;gBACE,MAAM,EAAA,CAAA;sBAA5C,SAAS;gBAAC,IAAA,EAAA,CAAA,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;gBACG,QAAQ,EAAA,CAAA;sBAA/C,SAAS;gBAAC,IAAA,EAAA,CAAA,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;gBAET,WAAW,EAAA,CAAA;sBAAvC,YAAY;uBAAC,aAAa,CAAA;gBACI,aAAa,EAAA,CAAA;sBAA3C,YAAY;uBAAC,eAAe,CAAA;gBACC,YAAY,EAAA,CAAA;sBAAzC,YAAY;uBAAC,cAAc,CAAA;gBACC,kBAAkB,EAAA,CAAA;sBAA9C,YAAY;uBAAC,aAAa,CAAA;gBAYN,SAAS,EAAA,CAAA;sBAA7B,KAAK;uBAAC,YAAY,CAAA;gBAEO,cAAc,EAAA,CAAA;sBAAvC,KAAK;uBAAC,iBAAiB,CAAA;gBAGpB,IAAI,EAAA,CAAA;sBADP,KAAK;gBAOF,MAAM,EAAA,CAAA;sBADT,KAAK;gBAOF,GAAG,EAAA,CAAA;sBADN,KAAK;gBAMF,OAAO,EAAA,CAAA;sBADV,KAAK;gBAOF,GAAG,EAAA,CAAA;sBADN,KAAK;gBAMG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBAEG,GAAG,EAAA,CAAA;sBAAX,KAAK;gBAEG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBAEG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBAEG,MAAM,EAAA,CAAA;sBAAd,KAAK;gBAEG,OAAO,EAAA,CAAA;sBAAf,KAAK;gBAEG,eAAe,EAAA,CAAA;sBAAvB,KAAK;gBAEG,eAAe,EAAA,CAAA;sBAAvB,KAAK;gBAGG,UAAU,EAAA,CAAA;sBAAlB,KAAK;gBAGG,OAAO,EAAA,CAAA;sBAAf,KAAK;gBAKF,KAAK,EAAA,CAAA;sBADR,KAAK;gBAMG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;;;MEjIG,cAAc,CAAA;;2GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;4GAAd,cAAc,EAAA,YAAA,EAAA,CAHV,QAAQ,EAAE,cAAc,EAAE,eAAe,EAAE,aAAa,EAAE,aAAa,aAD5E,YAAY,CAAA,EAAA,OAAA,EAAA,CAEZ,QAAQ,EAAE,cAAc,EAAE,eAAe,EAAE,aAAa,EAAE,aAAa,CAAA,EAAA,CAAA,CAAA;AAEtE,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,YAJf,YAAY,CAAA,EAAA,CAAA,CAAA;2FAIX,cAAc,EAAA,UAAA,EAAA,CAAA;kBAL1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,QAAQ,EAAE,cAAc,EAAE,eAAe,EAAE,aAAa,EAAE,aAAa,CAAC;oBACvF,OAAO,EAAE,CAAC,QAAQ,EAAE,cAAc,EAAE,eAAe,EAAE,aAAa,EAAE,aAAa,CAAC;iBACnF,CAAA;;;ACTD;;AAEG;;ACFH;;AAEG;;;;"}